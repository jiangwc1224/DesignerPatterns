package com.jwc.facade;

import java.math.BigDecimal;

/**
 * 门面模式（外观模式）  ------是一种结构模式
 * 为子系统提供一个更高层次的接口，使得子系统更方便被使用
 *
 * 优点：
 * 松散耦合: 门面模式松散了客户端与子系统的耦合关系，让子系统内部的模块能更容易扩展和维护。
 * 简单易用: 门面模式让子系统更加易用，客户端不再需要了解子系统内部的实现，也不需要跟众多子系统内部的模块进行交互，只需要跟门面类交互就可以了。
 * 划分访问层次：有些方法是系统内部使用，有些供给外部使用，该模式既能方便外部使用者，又能保护内部细节
 *
 * 缺点：不符合开闭原则
 *
 * 调停者模式与门面模式区别：
 * 1） 模式种类不同    调停者模式：行为性模式，  门面模式：结构模式
 * 2） 目的:门面模式是以封装和隔离为主要任务，而中介者模式则是以调和同事类之间的关系为主
 * 3) 功能区别:门面模式只是增加了一个门面， 它对子系统来说没有增加任何的功能， 子系统若脱离门面模式是完全可以独立运行的。
 *             而中介者模式则增加了业务功能，它把各个同事类中的原有耦合关系移植到了中介者，同事类不可能脱离中介者而独立存在，除非是想增加系统的复杂性和降低扩展性
 * 4) 知晓状态不同: 对门面模式来说，子系统不知道有门面存在，而对中介者来说，每个同事类都知道中介者存在，因为要依靠中介者调和同事之间的关系，它们对中介者非常了解。
 * 5) 封装程度不同:门面模式是一种简单的封装，所有的请求处理都委托给子系统完成，而中介者模式则需要有一个中心，由中心协调同事类完成，并且中心本身也完成部分业务，它属于更进一步的业务功能封装。
 *
 * @Auther: jiangwc
 * @Date: 2020/12/4 - 12 - 04 - 23:09
 * @Description: com.jwc.facade
 * @version: 1.0
 */
public class Main {
    public static void main(String[] args) {
        HospitalFacade facade = new HospitalFacade();
        facade.register(1);
        facade.treat(1);
        facade.pay(1,new BigDecimal("200"));
        facade.getMedicine(1);
    }


}
